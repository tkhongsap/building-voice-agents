# ConfigMaps for LiveKit Voice Agents Platform
# Contains non-sensitive configuration data for all environments

---
# Development Environment ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: voice-agents-config
  namespace: voice-agents-dev
  labels:
    app: voice-agents-platform
    component: config
    environment: development
data:
  # Application Configuration
  ENVIRONMENT: "development"
  LOG_LEVEL: "DEBUG"
  DEBUG: "true"
  
  # Server Configuration
  SERVER_PORT: "8080"
  SERVER_HOST: "0.0.0.0"
  METRICS_PORT: "9090"
  HEALTH_CHECK_PATH: "/health"
  
  # Database Configuration
  POSTGRES_DB: "voice_agents"
  POSTGRES_USER: "agent"
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # LiveKit Configuration
  LIVEKIT_HOST: "livekit-service"
  LIVEKIT_PORT: "7880"
  LIVEKIT_WS_PORT: "7881"
  
  # Worker Configuration
  MAX_WORKERS: "4"
  WORKER_TIMEOUT: "300"
  
  # Audio Configuration
  AUDIO_SAMPLE_RATE: "16000"
  AUDIO_CHANNELS: "1"
  AUDIO_FORMAT: "wav"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  JAEGER_ENDPOINT: "http://jaeger-service:14268/api/traces"

---
# Staging Environment ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: voice-agents-config
  namespace: voice-agents-staging
  labels:
    app: voice-agents-platform
    component: config
    environment: staging
data:
  # Application Configuration
  ENVIRONMENT: "staging"
  LOG_LEVEL: "INFO"
  DEBUG: "false"
  
  # Server Configuration
  SERVER_PORT: "8080"
  SERVER_HOST: "0.0.0.0"
  METRICS_PORT: "9090"
  HEALTH_CHECK_PATH: "/health"
  
  # Database Configuration
  POSTGRES_DB: "voice_agents"
  POSTGRES_USER: "agent"
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # LiveKit Configuration
  LIVEKIT_HOST: "livekit-service"
  LIVEKIT_PORT: "7880"
  LIVEKIT_WS_PORT: "7881"
  
  # Worker Configuration
  MAX_WORKERS: "8"
  WORKER_TIMEOUT: "300"
  
  # Audio Configuration
  AUDIO_SAMPLE_RATE: "16000"
  AUDIO_CHANNELS: "1"
  AUDIO_FORMAT: "wav"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  JAEGER_ENDPOINT: "http://jaeger-service:14268/api/traces"

---
# Production Environment ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: voice-agents-config
  namespace: voice-agents-prod
  labels:
    app: voice-agents-platform
    component: config
    environment: production
data:
  # Application Configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "WARN"
  DEBUG: "false"
  
  # Server Configuration
  SERVER_PORT: "8080"
  SERVER_HOST: "0.0.0.0"
  METRICS_PORT: "9090"
  HEALTH_CHECK_PATH: "/health"
  
  # Database Configuration
  POSTGRES_DB: "voice_agents"
  POSTGRES_USER: "agent"
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # LiveKit Configuration
  LIVEKIT_HOST: "livekit-service"
  LIVEKIT_PORT: "7880"
  LIVEKIT_WS_PORT: "7881"
  
  # Worker Configuration
  MAX_WORKERS: "16"
  WORKER_TIMEOUT: "300"
  
  # Audio Configuration
  AUDIO_SAMPLE_RATE: "16000"
  AUDIO_CHANNELS: "1"
  AUDIO_FORMAT: "wav"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  JAEGER_ENDPOINT: "http://jaeger-service:14268/api/traces"

---
# LiveKit Server Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: livekit-config
  namespace: voice-agents-dev
  labels:
    app: voice-agents-platform
    component: livekit
    environment: development
data:
  livekit.yaml: |
    port: 7880
    bind_addresses:
      - ""
    
    rtc:
      tcp_port: 7881
      port_range_start: 50000
      port_range_end: 60000
      use_external_ip: true
    
    redis:
      address: redis-service:6379
      username: ""
      password: ""
      db: 0
    
    turn:
      enabled: true
      domain: ""
      cert_file: ""
      key_file: ""
      tls_port: 5349
      udp_port: 3478
    
    webhook:
      api_key: livekit-api-key
      urls:
        - http://voice-agent-service:8080/webhook/livekit
    
    room:
      enabled_codecs:
        - mime: audio/opus
        - mime: audio/red
      max_participants: 100
      empty_timeout: 300s
      departure_timeout: 20s
    
    logging:
      level: info
      pion_level: warn

---
# NGINX Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: voice-agents-dev
  labels:
    app: voice-agents-platform
    component: nginx
    environment: development
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 64M;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;
        
        # Upstream for voice agents
        upstream voice_agents {
            least_conn;
            server voice-agent-service:8080 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        # Upstream for LiveKit
        upstream livekit {
            server livekit-service:7880 max_fails=3 fail_timeout=30s;
        }
        
        # Main server block
        server {
            listen 80;
            server_name _;
            
            # Security headers
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Voice agent API
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://voice_agents;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }
            
            # WebSocket for real-time communication
            location /ws {
                limit_req zone=websocket burst=10 nodelay;
                proxy_pass http://voice_agents;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
            }
            
            # LiveKit WebRTC endpoints
            location /livekit/ {
                proxy_pass http://livekit/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Static files and default route
            location / {
                proxy_pass http://voice_agents;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }