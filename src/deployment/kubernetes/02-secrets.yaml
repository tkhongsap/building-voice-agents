# Secrets for LiveKit Voice Agents Platform
# Contains sensitive configuration data for all environments
# NOTE: In production, these should be created using external secret management tools

---
# Development Environment Secrets
apiVersion: v1
kind: Secret
metadata:
  name: voice-agents-secrets
  namespace: voice-agents-dev
  labels:
    app: voice-agents-platform
    component: secrets
    environment: development
type: Opaque
data:
  # Database credentials (base64 encoded)
  POSTGRES_PASSWORD: YWdlbnRfcGFzc3dvcmQ=  # agent_password
  
  # LiveKit credentials (base64 encoded)
  LIVEKIT_API_KEY: ZGV2a2V5  # devkey
  LIVEKIT_API_SECRET: ZGV2c2VjcmV0  # devsecret
  
  # Redis password (base64 encoded - empty for dev)
  REDIS_PASSWORD: ""
  
  # API Keys for external services (base64 encoded)
  OPENAI_API_KEY: c2tfZGV2X2FwaV9rZXk=  # sk_dev_api_key
  ANTHROPIC_API_KEY: YW50aHJvcGljX2Rldl9rZXk=  # anthropic_dev_key
  AZURE_SPEECH_KEY: YXp1cmVfc3BlZWNoX2Rldl9rZXk=  # azure_speech_dev_key
  
  # JWT secrets (base64 encoded)
  JWT_SECRET: ZGV2X2p3dF9zZWNyZXRfa2V5XzEyMw==  # dev_jwt_secret_key_123
  
  # Monitoring secrets (base64 encoded)
  GRAFANA_ADMIN_PASSWORD: YWRtaW4=  # admin

---
# Staging Environment Secrets
apiVersion: v1
kind: Secret
metadata:
  name: voice-agents-secrets
  namespace: voice-agents-staging
  labels:
    app: voice-agents-platform
    component: secrets
    environment: staging
type: Opaque
data:
  # Database credentials (base64 encoded)
  POSTGRES_PASSWORD: c3RhZ2luZ19wYXNzd29yZF8xMjM=  # staging_password_123
  
  # LiveKit credentials (base64 encoded)
  LIVEKIT_API_KEY: c3RhZ2luZ19saXZla2l0X2tleQ==  # staging_livekit_key
  LIVEKIT_API_SECRET: c3RhZ2luZ19saXZla2l0X3NlY3JldA==  # staging_livekit_secret
  
  # Redis password (base64 encoded)
  REDIS_PASSWORD: c3RhZ2luZ19yZWRpc19wYXNz  # staging_redis_pass
  
  # API Keys for external services (base64 encoded)
  OPENAI_API_KEY: c2tfc3RhZ2luZ19vcGVuYWlfa2V5  # sk_staging_openai_key
  ANTHROPIC_API_KEY: YW50aHJvcGljX3N0YWdpbmdfa2V5  # anthropic_staging_key
  AZURE_SPEECH_KEY: YXp1cmVfc3BlZWNoX3N0YWdpbmdfa2V5  # azure_speech_staging_key
  
  # JWT secrets (base64 encoded)
  JWT_SECRET: c3RhZ2luZ19qd3Rfc2VjcmV0X2tleV8xMjM=  # staging_jwt_secret_key_123
  
  # Monitoring secrets (base64 encoded)
  GRAFANA_ADMIN_PASSWORD: c3RhZ2luZ19hZG1pbg==  # staging_admin

---
# Production Environment Secrets
apiVersion: v1
kind: Secret
metadata:
  name: voice-agents-secrets
  namespace: voice-agents-prod
  labels:
    app: voice-agents-platform
    component: secrets
    environment: production
type: Opaque
data:
  # Database credentials (base64 encoded)
  # NOTE: In production, use external secret management like AWS Secrets Manager, Azure Key Vault, or HashiCorp Vault
  POSTGRES_PASSWORD: cHJvZF9zdXBlcl9zZWN1cmVfcGFzc3dvcmRfMTIzNDU=  # prod_super_secure_password_12345
  
  # LiveKit credentials (base64 encoded)
  LIVEKIT_API_KEY: cHJvZF9saXZla2l0X2FwaV9rZXk=  # prod_livekit_api_key
  LIVEKIT_API_SECRET: cHJvZF9saXZla2l0X3NlY3VyZV9zZWNyZXQ=  # prod_livekit_secure_secret
  
  # Redis password (base64 encoded)
  REDIS_PASSWORD: cHJvZF9yZWRpc19zZWN1cmVfcGFzc3dvcmQ=  # prod_redis_secure_password
  
  # API Keys for external services (base64 encoded)
  OPENAI_API_KEY: c2tfcHJvZF9vcGVuYWlfYXBpX2tleQ==  # sk_prod_openai_api_key
  ANTHROPIC_API_KEY: YW50aHJvcGljX3Byb2RfYXBpX2tleQ==  # anthropic_prod_api_key
  AZURE_SPEECH_KEY: YXp1cmVfc3BlZWNoX3Byb2Rfa2V5  # azure_speech_prod_key
  
  # JWT secrets (base64 encoded)
  JWT_SECRET: cHJvZF9qd3Rfc2VjdXJlX3NlY3JldF9rZXlfMTIzNDU=  # prod_jwt_secure_secret_key_12345
  
  # Monitoring secrets (base64 encoded)
  GRAFANA_ADMIN_PASSWORD: cHJvZF9ncmFmYW5hX2FkbWluX3Bhc3M=  # prod_grafana_admin_pass

---
# TLS Certificates Secret (example structure)
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: voice-agents-prod
  labels:
    app: voice-agents-platform
    component: tls
    environment: production
type: kubernetes.io/tls
data:
  # NOTE: Replace with actual certificate data
  # Generated using: kubectl create secret tls tls-certificates --cert=path/to/cert.pem --key=path/to/key.pem
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Base64 encoded private key

---
# Docker Registry Secret (for private container images)
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: voice-agents-prod
  labels:
    app: voice-agents-platform
    component: registry
    environment: production
type: kubernetes.io/dockerconfigjson
data:
  # NOTE: Replace with actual Docker registry credentials
  # Generated using: kubectl create secret docker-registry docker-registry-secret --docker-server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InVzZXIiLCJwYXNzd29yZCI6InBhc3MiLCJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJhdXRoIjoiZFhObGNqcHdZWE56In19fQ==

---
# Monitoring Secrets for Cross-Namespace Access
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: voice-agents-monitoring
  labels:
    app: voice-agents-platform
    component: monitoring
    environment: shared
type: Opaque
data:
  # Prometheus scraping credentials
  PROMETHEUS_USER: cHJvbWV0aGV1cw==  # prometheus
  PROMETHEUS_PASSWORD: cHJvbV9zZWN1cmVfcGFzcw==  # prom_secure_pass
  
  # Grafana admin credentials
  GRAFANA_ADMIN_USER: YWRtaW4=  # admin
  GRAFANA_ADMIN_PASSWORD: Z3JhZmFuYV9hZG1pbl9wYXNz  # grafana_admin_pass
  
  # Jaeger credentials
  JAEGER_USER: amFlZ2Vy  # jaeger
  JAEGER_PASSWORD: amFlZ2VyX3Bhc3M=  # jaeger_pass