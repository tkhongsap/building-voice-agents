# Grafana Datasource Configuration for Voice Agents Platform
apiVersion: 1

datasources:
  # Primary Prometheus datasource
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    version: 1
    jsonData:
      timeInterval: "15s"
      queryTimeout: "60s"
      httpMethod: POST
      manageAlerts: true
      prometheusType: Prometheus
      prometheusVersion: "2.45.0"
      cacheLevel: "High"
      disableMetricsLookup: false
      customQueryParameters: ""
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: jaeger
          urlDisplayLabel: "View in Jaeger"

  # Jaeger for distributed tracing
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    uid: jaeger
    editable: true
    version: 1
    jsonData:
      tracesToLogsV2:
        datasourceUid: loki
        spanStartTimeShift: "-1h"
        spanEndTimeShift: "1h"
        filterByTraceID: true
        filterBySpanID: false
        tags:
          - key: "service.name"
            value: "voice-agent"
      tracesToMetrics:
        datasourceUid: prometheus
        spanStartTimeShift: "-1h"
        spanEndTimeShift: "1h"
        tags:
          - key: "service.name"
            value: "service"
        queries:
          - name: "Request Rate"
            query: "sum(rate(traces_spanmetrics_latency_bucket{service=\"$service\"}[5m]))"
      serviceMap:
        datasourceUid: prometheus
      nodeGraph:
        enabled: true

  # Loki for log aggregation (if available)
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    uid: loki
    editable: true
    version: 1
    jsonData:
      maxLines: 1000
      derivedFields:
        - name: "TraceID"
          matcherRegex: "trace_id=(\\w+)"
          url: "$${__value.raw}"
          datasourceUid: jaeger

  # Alertmanager for alert management
  - name: Alertmanager
    type: alertmanager
    access: proxy
    url: http://alertmanager:9093
    uid: alertmanager
    editable: true
    version: 1
    jsonData:
      implementation: "prometheus"

  # Tempo for distributed tracing (alternative to Jaeger)
  - name: Tempo
    type: tempo
    access: proxy
    url: http://tempo:3200
    uid: tempo
    editable: true
    version: 1
    jsonData:
      tracesToLogsV2:
        datasourceUid: loki
        spanStartTimeShift: "-1h"
        spanEndTimeShift: "1h"
        filterByTraceID: true
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: prometheus
        spanStartTimeShift: "-1h"
        spanEndTimeShift: "1h"
        tags:
          - key: "service.name"
            value: "service"
        queries:
          - name: "Request Rate"
            query: "sum(rate(traces_spanmetrics_latency_bucket{service=\"$service\"}[5m]))"
      serviceMap:
        datasourceUid: prometheus
      nodeGraph:
        enabled: true
      search:
        hide: false
      lokiSearch:
        datasourceUid: loki

  # CloudWatch (if running on AWS)
  - name: CloudWatch
    type: cloudwatch
    access: proxy
    uid: cloudwatch
    editable: true
    version: 1
    jsonData:
      authType: default
      defaultRegion: us-west-2
      customMetricsNamespaces: "AWS/ECS,AWS/ApplicationELB,AWS/NetworkELB"
      assumeRoleArn: ""

  # TestData for dashboard development
  - name: TestData
    type: testdata
    access: proxy
    uid: testdata
    editable: true
    version: 1