# Bandit Configuration for Voice Agents Platform
# Python security linting configuration

# Basic configuration
basic:
  # Paths to scan
  paths: 
    - "src/"
    - "backend/"
  
  # Paths to exclude
  exclude_dirs:
    - "tests/"
    - "test/"
    - "__pycache__/"
    - ".pytest_cache/"
    - "node_modules/"
    - ".git/"
    - "venv/"
    - ".venv/"
    - "docs/"
    - "examples/"

# Test selection
tests:
  # Include all security tests by default
  # Specific tests can be skipped using skip_tests
  
  # High severity tests (always run)
  high_severity:
    - B101  # assert_used
    - B102  # exec_used
    - B103  # set_bad_file_permissions
    - B104  # hardcoded_bind_all_interfaces
    - B105  # hardcoded_password_string
    - B106  # hardcoded_password_funcarg
    - B107  # hardcoded_password_default
    - B108  # hardcoded_tmp_directory
    - B110  # try_except_pass
    - B112  # try_except_continue
    - B201  # flask_debug_true
    - B301  # pickle
    - B302  # marshal
    - B303  # md5
    - B304  # des
    - B305  # cipher
    - B306  # mktemp_q
    - B307  # eval
    - B308  # mark_safe
    - B309  # httpsconnection
    - B310  # urllib_urlopen
    - B311  # random
    - B312  # telnetlib
    - B313  # xml_bad_cElementTree
    - B314  # xml_bad_ElementTree
    - B315  # xml_bad_expatreader
    - B316  # xml_bad_expatbuilder
    - B317  # xml_bad_sax
    - B318  # xml_bad_minidom
    - B319  # xml_bad_pulldom
    - B320  # xml_bad_etree
    - B321  # ftplib
    - B322  # input
    - B323  # unverified_context
    - B324  # hashlib_new_insecure_functions
    - B325  # tempnam
    - B401  # import_telnetlib
    - B402  # import_ftplib
    - B403  # import_pickle
    - B404  # import_subprocess
    - B405  # import_xml_etree
    - B406  # import_xml_sax
    - B407  # import_xml_expat
    - B408  # import_xml_minidom
    - B409  # import_xml_pulldom
    - B410  # import_lxml
    - B411  # import_xmlrpclib
    - B412  # import_httpoxy
    - B413  # import_pycrypto
    - B501  # request_with_no_cert_validation
    - B502  # ssl_with_bad_version
    - B503  # ssl_with_bad_defaults
    - B504  # ssl_with_no_version
    - B505  # weak_cryptographic_key
    - B506  # yaml_load
    - B507  # ssh_no_host_key_verification
    - B601  # paramiko_calls
    - B602  # subprocess_popen_with_shell_equals_true
    - B603  # subprocess_without_shell_equals_true
    - B604  # any_other_function_with_shell_equals_true
    - B605  # start_process_with_a_shell
    - B606  # start_process_with_no_shell
    - B607  # start_process_with_partial_path
    - B608  # hardcoded_sql_expressions
    - B609  # linux_commands_wildcard_injection
    - B610  # django_extra_used
    - B611  # django_rawsql_used
    - B701  # jinja2_autoescape_false
    - B702  # use_of_mako_templates
    - B703  # django_mark_safe

  # Tests to skip (with justification)
  skip_tests:
    # B101: assert_used - Common in test files and development
    # B311: random - Using for non-cryptographic purposes is acceptable
    
# Severity levels
severity:
  low: []
  medium: []
  high: []

# Confidence levels  
confidence:
  low: []
  medium: []
  high: []

# Report formatting
reports:
  format: "json"
  output_file: "/security/reports/bandit-report.json"
  
  # Additional formats
  additional_formats:
    - format: "txt"
      output_file: "/security/reports/bandit-report.txt"
    - format: "html"
      output_file: "/security/reports/bandit-report.html"
    - format: "xml"
      output_file: "/security/reports/bandit-report.xml"

# Baseline (for comparing against previous scans)
baseline: "/security/baselines/bandit-baseline.json"

# Custom rules
rules:
  # Custom rules directory
  custom_rules_dir: "/security/rules/bandit/"
  
  # Profile for specific rule sets
  profile: "security"

# Performance settings
performance:
  # Number of parallel processes
  processes: 4
  
  # Timeout for scanning (in seconds)
  timeout: 300

# Plugin configuration
plugins:
  # Built-in plugins to disable
  disabled_plugins: []
  
  # External plugins to load
  external_plugins: []

# Message template
message_template: "[{test_id}] {msg} (Severity: {severity}, Confidence: {confidence})"

# Aggregate results
aggregate: true

# Exit codes
exit_codes:
  high: 2
  medium: 1  
  low: 0

# Ignore nosec comments
ignore_nosec: false

# Show skipped tests
show_skipped: false

# Recursive scan
recursive: true

# Lines of code to include in output
number_of_lines: 3